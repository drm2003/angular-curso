{"ast":null,"code":"import { EmailService } from '../../email.service';\nimport { PageDataService } from '../../services/page-data.service';\nimport { HeaderDataService } from '../../services/header.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../email.service\";\nimport * as i2 from \"../../services/page-data.service\";\nimport * as i3 from \"../../services/header.service\";\nexport let CaixaDeEntradaComponent = /*#__PURE__*/(() => {\n  class CaixaDeEntradaComponent {\n    constructor(emailService, pageService, headerService) {\n      this.emailService = emailService;\n      this.pageService = pageService;\n      this.headerService = headerService;\n      this._isNewEmailFormOpen = false;\n      this.emailList = [];\n      this.termoParaFiltro = '';\n      this.email = {\n        destinatario: '',\n        assunto: '',\n        conteudo: '',\n        dataDeEnvio: ''\n      };\n    }\n\n    ngOnInit() {\n      this.emailService.listar().subscribe(lista => {\n        this.emailList = lista;\n      }, responseError => {\n        this.mensagemErro = responseError.message;\n      });\n      this.pageService.defineTitulo('Caixa de entrada - CMail');\n      this.headerService.valorDoFiltro.subscribe(novoValor => this.termoParaFiltro = novoValor);\n    }\n\n    get isNewEmailFormOpen() {\n      return this._isNewEmailFormOpen;\n    }\n\n    toggleIsNewEmailForm() {\n      this._isNewEmailFormOpen = !this._isNewEmailFormOpen;\n    }\n\n    handleNewEmail(formEmail) {\n      if (formEmail.invalid) {\n        return;\n      }\n\n      this.emailService.enviar(this.email).subscribe({\n        next: emailApi => {\n          //fazemos todas as outras operações após o OK da API\n          this.emailList.push(emailApi);\n          this.email = {\n            destinatario: '',\n            assunto: '',\n            conteudo: '',\n            dataDeEnvio: ''\n          };\n        },\n        error: erro => {\n          console.error(erro);\n        }\n      });\n      formEmail.reset();\n    }\n    /*  handleNewEmail(formEmail: NgForm) {\n       if (formEmail.invalid) {\n         return;\n       }\n           this.emailList.push(this.email);\n           this.email = {\n         destinatario: '',\n         assunto: '',\n         conteudo: ''\n       }\n           formEmail.reset();\n     } */\n\n\n    handleRemoveEmail(eventoVaiRemover, emailId) {\n      console.log(eventoVaiRemover);\n\n      if (eventoVaiRemover.status === 'removing') {\n        //o próximo passo é agar da API!\n        this.emailService.deletar(emailId).subscribe(res => {\n          console.log(res);\n          this.emailList = this.emailList.filter(email => email.id != emailId);\n        }, err => console.log(err));\n      }\n    }\n\n    filtrarEmailsPorAssunto() {\n      const termoParaFiltroEmMinusculo = this.termoParaFiltro.toLocaleLowerCase();\n      return this.emailList.filter(email => {\n        const assunto = email.assunto.toLowerCase();\n        return assunto.includes(termoParaFiltroEmMinusculo);\n      });\n    }\n\n  }\n\n  CaixaDeEntradaComponent.ɵfac = function CaixaDeEntradaComponent_Factory(t) {\n    return new (t || CaixaDeEntradaComponent)(i0.ɵɵdirectiveInject(i1.EmailService), i0.ɵɵdirectiveInject(i2.PageDataService), i0.ɵɵdirectiveInject(i3.HeaderDataService));\n  };\n\n  CaixaDeEntradaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CaixaDeEntradaComponent,\n    selectors: [[\"app-caixa-de-entrada\"]],\n    decls: 1,\n    vars: 0,\n    template: function CaixaDeEntradaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"teste\");\n      }\n    },\n    styles: [\"\", \"ul[_ngcontent-%COMP%], li[_ngcontent-%COMP%]{margin:0;padding:0;list-style-type:none}\"]\n  });\n  return CaixaDeEntradaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}